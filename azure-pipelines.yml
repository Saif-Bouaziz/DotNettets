pool: 
    name: Default
jobs:
- job: RunZAPScan
  displayName: "Exécution d'OWASP ZAP Scan" 
  steps: 
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        Write-Output '$(Build.BuildNumber)'
        Write-Output "Exécution d'OWASP ZAP Scan..."    
        cd "C:\Program Files\OWASP\Zed Attack Proxy"
        .\zap.bat -cmd -quickurl http://localhost:53357 -quickout "C:\Users\Dell\Documents\Rapport\$(Build.BuildNumber)_rapport-zap.html"
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        # Étape 3 : Traiter les résultats et produire des rapports lisibles par Azure DevOps
        Write-Output "Traitement des résultats OWASP ZAP..."
        # Lire le contenu du rapport        
        $rapportContenu = Get-Content "C:\Users\Dell\Documents\Rapport\rapport-zap.html"       
        # Afficher le contenu du rapport dans les journaux de build
        Write-Output $rapportContenu        
        # Étape 4 : Publier les résultats dans Azure DevOps 
        echo "##vso[task.logissue type=error]$rapportContenu"
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'C:\Users\Dell\Documents\Rapport\rapport-zap.html'
      ArtifactName: 'Rapport ZAp'
